schema{
    query: Query
    mutation: Mutation
}

input CarInput {
    number: String!
    brand: String!
    model: String!
    color: String!
    year: Int!
}

type Car{
    id: ID!
    number: String!
    brand: String!
    model: String!
    color: String!
    year: Int!
    avtocod_link: String
    autoru_link: String
    created: Int
}

input Filters{
    number: [String]
    brand: [String]
    model: [String]
    color: [String]
    year: [Int]
    created: [String]
}

input Id_Car{
    id: ID!
}

input Number_Car{
    number: String!
}

input SortingOptions{
    options: [String!]
}

type ResultAfterTranslate{
    match: Boolean!
    actual: String!
    expected: String!
}

type Response{
    result: String!
    car: Car
}

type Query{
    getStatistics: [ResultAfterTranslate!]!
}

type Mutation{
    filteringCars(filters: Filters!): [Car!]!
    sortCars(sortingOptions: SortingOptions!): [Car!]!
    deleteByNumber(number: Number_Car!): Response!
    deleteById(id: Id_Car!): Response!
    createCar(car: CarInput!): Response!
}

